### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamldep -package oUnit -package llvm -modules main.ml > main.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamldep -package oUnit -package llvm -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package llvm -o ast.cmo ast.ml # cached
# Target: codegen2.ml.depends, tags: { extension:ml, file:codegen2.ml, ocaml, ocamldep, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamldep -package oUnit -package llvm -modules codegen2.ml > codegen2.ml.depends
# Target: constpass.ml.depends, tags: { extension:ml, file:constpass.ml, ocaml, ocamldep, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamldep -package oUnit -package llvm -modules constpass.ml > constpass.ml.depends # cached
# Target: constpass.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:constpass.cmo, file:constpass.ml, implem, ocaml, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package llvm -o constpass.cmo constpass.ml # cached
# Target: codegen2.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:codegen2.cmo, file:codegen2.ml, implem, ocaml, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package llvm -o codegen2.cmo codegen2.ml
+ ocamlfind ocamlc -c -package oUnit -package llvm -o codegen2.cmo codegen2.ml
File "codegen2.ml", line 57, characters 17-31:
Warning 10: this expression should have type unit.
File "codegen2.ml", line 37, characters 19-1415:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Return _
File "codegen2.ml", line 35, characters 4-17:
Warning 26: unused variable v.
File "codegen2.ml", line 53, characters 4-18:
Warning 26: unused variable u.
File "codegen2.ml", line 54, characters 4-13:
Warning 26: unused variable i.
File "codegen2.ml", line 55, characters 4-17:
Warning 26: unused variable m.
File "codegen2.ml", line 66, characters 10-20:
Warning 26: unused variable args_array.
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, package(llvm), package(oUnit), quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package llvm -o main.cmo main.ml
+ ocamlfind ocamlc -c -package oUnit -package llvm -o main.cmo main.ml
File "main.ml", line 62, characters 6-8:
Warning 26: unused variable ir.
# Target: main.byte, tags: { byte, dont_link_with, extension:byte, file:main.byte, g++, link, ocaml, package(llvm), package(oUnit), program, quiet, traverse, use_llvm, use_llvm_analysis }
ocamlfind ocamlc llvm.cma llvm_analysis.cma -cc g++ -linkpkg -package oUnit -package llvm ast.cmo codegen2.cmo constpass.cmo main.cmo -o main.byte
+ ocamlfind ocamlc llvm.cma llvm_analysis.cma -cc g++ -linkpkg -package oUnit -package llvm ast.cmo codegen2.cmo constpass.cmo main.cmo -o main.byte
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated
# Compilation successful.
