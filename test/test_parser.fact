public bool fn(secret uint8 x) {
  _ = true;
  _ = false;
  _ = 24;
  _ = 266;
  _ = 128;
  _ = 0;
  _ = 5;
  _ = x;
  _ = xy;
  _ = _93ab;
  _ = bjbj[2];
  _ = fii[afs[false]];
  _ = len tootsie;
  _ = (int16)x;
  _ = -yx;
  _ = (-7);
  _ = !thing;
  _ = ~other_thing;
  _ = 2 + x;
  _ = 4 - 3 - 2;
  _ = x + y - z;
  _ = x - y + z;
  _ = 1 + 2 * 3;
  _ = 1 * 2 + 3;
  // other precedence tests go here
  _ = 1 + -3;
  _ = a ? b : c;
  _ = a ? b : c ? d : e;
  _ = (a ? b : c) ? d : e;
  _ = a ? b ? c : d : e;
  _ = f();
  _ = f(2);
  _ = f(x, y, z);
  _ = f(x, ref y, z);
  _ = declassify(xy);
  int16 x = 5;
  secret uint32 y = 22 + 3;
  mut int8 t = 9;
  public mut uint16 z = x;
  secret const int32 wat = no;
  uint8[4] x = arrzeros(5);
  x[5] = 2 + 3;
  if (x) {
    _ = 3;
    if (22 + yz) { }
  }
  if (x) {
    _ = 2;
  } else {
    _ = 5;
  }
  if (x) {
    _ = 1;
  } else if (y) {
    _ = 2;
  }
  if (x) {
    _ = 1;
  } else if (y) {
    _ = 2;
  } else if (z) {
    _ = 3;
  }
  if (x) {
    _ = 1;
  } else if (y) {
    _ = 2;
  } else {
    _ = 3;
  }
  if (x) {
    _ = 1;
  } else if (y) {
    _ = 2;
  } else if (z) {
    _ = 3;
  } else {
    _ = 4;
  }
  for (uint32 i = 0 to x + y) {
    if (i == 3) {
      x = 2;
    }
  }
  x += 1;
  x -= 1;
  x *= 1;
  x &&= 1;
  x ||= 1;
  x &= 1;
  x |= -x;
  x ^= ~x + 3;
  x >>= 1;
  x <<= 1;
  return x^2 + y^2 - z^3; // `+` has higher precendence than `^` haha
}

void fn2() { }
void fn3(public mut uint8 x, secret mut uint8 y, public const uint8 x, secret uint8 y) { return 7; }
secret int8 fn6(public uint8[4] xs, secret mut uint8[4] ys) { }

void additional() {
  fn2(x, y, ref z, t);
}

void arrays() {
  uint8[4] zero = arrzeros(72);
  uint8[4] copy = arrcopy(zero);
  uint8[4] view = arrview(copy, 2, len zero);
  uint8[4] comp = x => x < 2 ? x ^ 0x35
                             : 0x00;
}
